{"version":3,"file":"bundle.umd.js","sources":["../src/index.ts"],"sourcesContent":["import { ApolloLink, Observable, Operation } from 'apollo-link';\nimport { GraphQLError, ExecutionResult } from 'graphql';\n\nexport interface ErrorResponse {\n  graphQLErrors?: GraphQLError[];\n  networkError?: Error;\n  response?: ExecutionResult;\n  operation: Operation;\n}\n\nexport namespace ErrorLink {\n  /**\n   * Callback to be triggered when an error occurs within the link stack.\n   */\n  export interface ErrorHandler {\n    (error: ErrorResponse): void;\n  }\n}\n\n// For backwards compatibility.\nexport import ErrorHandler = ErrorLink.ErrorHandler;\n\nexport const onError = (errorHandler: ErrorHandler): ApolloLink => {\n  return new ApolloLink((operation, forward) => {\n    return new Observable(observer => {\n      let sub;\n      try {\n        sub = forward(operation).subscribe({\n          next: result => {\n            if (result.errors) {\n              errorHandler({\n                graphQLErrors: result.errors,\n                response: result,\n                operation,\n              });\n            }\n            observer.next(result);\n          },\n          error: networkError => {\n            errorHandler({\n              operation,\n              networkError,\n              //Network errors can return GraphQL errors on for example a 403\n              graphQLErrors: networkError.result && networkError.result.errors,\n            });\n            observer.error(networkError);\n          },\n          complete: observer.complete.bind(observer),\n        });\n      } catch (e) {\n        errorHandler({ networkError: e, operation });\n        observer.error(e);\n      }\n\n      return () => {\n        if (sub) sub.unsubscribe();\n      };\n    });\n  });\n};\n\nexport class ErrorLink extends ApolloLink {\n  private link: ApolloLink;\n  constructor(errorHandler: ErrorLink.ErrorHandler) {\n    super();\n    this.link = onError(errorHandler);\n  }\n\n  public request(operation, forward): Observable<ExecutionResult> | null {\n    return this.link.request(operation, forward);\n  }\n}\n"],"names":["ApolloLink","Observable"],"mappings":";;;;;;;;;;;;;;;;AAAA,IAsBa,OAAO,GAAG,UAAC,YAA0B;IAChD,OAAO,IAAIA,qBAAU,CAAC,UAAC,SAAS,EAAE,OAAO;QACvC,OAAO,IAAIC,qBAAU,CAAC,UAAA,QAAQ;YAC5B,IAAI,GAAG,CAAC;YACR,IAAI;gBACF,GAAG,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC;oBACjC,IAAI,EAAE,UAAA,MAAM;wBACV,IAAI,MAAM,CAAC,MAAM,EAAE;4BACjB,YAAY,CAAC;gCACX,aAAa,EAAE,MAAM,CAAC,MAAM;gCAC5B,QAAQ,EAAE,MAAM;gCAChB,SAAS,WAAA;6BACV,CAAC,CAAC;yBACJ;wBACD,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;qBACvB;oBACD,KAAK,EAAE,UAAA,YAAY;wBACjB,YAAY,CAAC;4BACX,SAAS,WAAA;4BACT,YAAY,cAAA;4BAEZ,aAAa,EAAE,YAAY,CAAC,MAAM,IAAI,YAAY,CAAC,MAAM,CAAC,MAAM;yBACjE,CAAC,CAAC;wBACH,QAAQ,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;qBAC9B;oBACD,QAAQ,EAAE,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC;iBAC3C,CAAC,CAAC;aACJ;YAAC,OAAO,CAAC,EAAE;gBACV,YAAY,CAAC,EAAE,YAAY,EAAE,CAAC,EAAE,SAAS,WAAA,EAAE,CAAC,CAAC;gBAC7C,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;aACnB;YAED,OAAO;gBACL,IAAI,GAAG;oBAAE,GAAG,CAAC,WAAW,EAAE,CAAC;aAC5B,CAAC;SACH,CAAC,CAAC;KACJ,CAAC,CAAC;CACJ,CAAC;AAEF;IAA+B,6BAAU;IAEvC,mBAAY,YAAoC;QAAhD,YACE,iBAAO,SAER;QADC,KAAI,CAAC,IAAI,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC;;KACnC;IAEM,2BAAO,GAAd,UAAe,SAAS,EAAE,OAAO;QAC/B,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;KAC9C;IACH,gBAAC;CAAA,CAV8BD,qBAAU;;;;;;;;;;;;;"}